import numba
import numpy as np


@numba.jit(nopython=True, parallel=True)
def kamera(input_data):
    n = input_data.shape[0]
    X = input_data[:, 0]
    Y = input_data[:, 1]
    Z = input_data[:, 2]
    alpha = input_data[:, 3]
    beta = input_data[:, 4]
    gama = input_data[:, 5]
    x0 = np.cos(beta)
    x1 = x0**2
    x2 = np.cos(alpha)
    x3 = np.sin(gama)
    x4 = x2 * x3
    x5 = np.sin(beta)
    x6 = np.sin(alpha)
    x7 = np.cos(gama)
    x8 = x4 * x5 + x6 * x7
    x9 = x1 * x4 + x5 * x8
    x10 = x0 * x6
    x11 = 0.3095 * x10
    x12 = Y - x11
    x13 = X + 0.3095 * x5
    x14 = x13 * x5
    x15 = x0 * x2
    x16 = Z + 0.3095 * x15
    x17 = x15 * x16
    x18 = -x0 * x12 * x6 + x14 + x17
    x19 = -1 / x18
    x20 = Z**2
    x21 = x20 / x2**2
    x22 = np.sqrt(x20 + x21 * x6**2 + x21 * x5**2 / x1)
    x23 = x22 * x5
    x24 = X - x23
    x25 = x24 * x5
    x26 = Y + x10 * x22
    x27 = x15 * x22
    x28 = x15 * (Z - x27)
    x29 = -x0 * x26 * x6 + x25 + x28
    x30 = -x29
    x31 = x12 * x19 * x30 - x26
    x32 = -x2 * x7 + x3 * x5 * x6
    x33 = -x32
    x34 = x1 * x3 * x6 - x33 * x5
    x35 = x19 * x30
    x36 = -Z + x27
    x37 = x16 * x35 + x36
    x38 = x10 * x8 + x15 * x33
    x39 = -X + x23
    x40 = x13 * x35 + x39
    x41 = 8.0 / (x22 + 0.3015)
    x42 = x41 / (x34**2 + x38**2 + x9**2)
    x43 = x0 * x3
    x44 = x41 / (x1 * x3**2 + x32**2 + x8**2)
    x45 = Y - x11 - 0.05
    x46 = 0.05 * x5
    x47 = 0.05 * x10
    x48 = -x46 + x47
    x49 = (-x18 - x48)**(-1.0)
    x50 = -x29 - x48
    x51 = x26 - 0.05
    x52 = x45 * x49 * x50 - x51
    x53 = x49 * x50
    x54 = x16 * x53 + x36
    x55 = x13 - 0.05
    x56 = x39 + 0.05
    x57 = x53 * x55 + x56
    x58 = x12 + 0.05
    x59 = x46 + x47
    x60 = (x10 * x12 - x14 - x17 + x59)**(-1.0)
    x61 = x10 * x26 - x25 - x28 + x59
    x62 = x26 + 0.05
    x63 = x58 * x60 * x61 - x62
    x64 = x60 * x61
    x65 = x16 * x64 + x36
    x66 = x55 * x64 + x56
    x67 = x46 - x47
    x68 = (-x18 - x67)**(-1.0)
    x69 = -x29 - x67
    x70 = x58 * x68 * x69 - x62
    x71 = x16 * x68 * x69 + x36
    x72 = x13 + 0.05
    x73 = x24 + 0.05
    x74 = x68 * x69 * x72 - x73
    x75 = (-x18 - x59)**(-1.0)
    x76 = -x29 - x59
    x77 = x45 * x75 * x76 - x51
    x78 = x16 * x75 * x76 + x36
    x79 = x72 * x75 * x76 - x73
    res = np.zeros((n, 10), dtype=np.float64)
    res[:, 0] = x42 * (x31 * x9 + x34 * x37 + x38 * x40)
    res[:, 1] = x44 * (x31 * x33 + x37 * x8 - x40 * x43)
    res[:, 2] = x42 * (x34 * x54 + x38 * x57 + x52 * x9)
    res[:, 3] = x44 * (x33 * x52 - x43 * x57 + x54 * x8)
    res[:, 4] = x42 * (x34 * x65 + x38 * x66 + x63 * x9)
    res[:, 5] = x44 * (x33 * x63 - x43 * x66 + x65 * x8)
    res[:, 6] = x42 * (x34 * x71 + x38 * x74 + x70 * x9)
    res[:, 7] = x44 * (x33 * x70 - x43 * x74 + x71 * x8)
    res[:, 8] = x42 * (x34 * x78 + x38 * x79 + x77 * x9)
    res[:, 9] = x44 * (x33 * x77 - x43 * x79 + x78 * x8)
    return res


dummy_data = np.random.rand(1000, 6)
dummy_output = kamera(dummy_data)
